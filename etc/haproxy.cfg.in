global
        master-worker
        mworker-max-reloads 10
        log 127.0.0.1 len 4096 local0
        tune.http.logurilen 3072
        user  nobody
        group nobody
        daemon
        maxconn 65535
        pidfile /var/run/haproxy.pid
        stats socket /tmp/haproxy.sock mode 0600 level admin expose-fd listeners

        ca-base /data/tls
        crt-base /data/tls

        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
        tune.ssl.default-dh-param 2048

defaults
        log       global
        mode      http
        balance   leastconn
        maxconn   65535
        option    httplog
        option    redispatch
        option    abortonclose
        option    forwardfor
        no option httpclose
        no option http-server-close
        retries   1
        timeout queue   0
        timeout connect 2000
        timeout client  55000
        timeout server  120000
        errorfile 503 /opt/smartdc/cloudapi/etc/haproxy-error-503.json.http
        errorfile 504 /opt/smartdc/cloudapi/etc/haproxy-error-503.json.http
        errorfile 500 /opt/smartdc/cloudapi/etc/haproxy-error-500.json.http
        errorfile 400 /opt/smartdc/cloudapi/etc/haproxy-error-400.json.http
        errorfile 408 /opt/smartdc/cloudapi/etc/haproxy-error-408.json.http

backend haproxy-stats_http
        stats enable
        stats refresh 30s
        stats uri /

frontend stats_http
        default_backend haproxy-stats_http
        bind @@ADMIN_IP@@:8080

frontend cloudapi
        bind *:443 ssl crt /data/tls/cert.pem
        http-request capture req.hdr(x-request-id) len 36
        default_backend servers
        acl is_websocket path_end /changefeed
        acl is_websocket hdr(Upgrade) -i WebSocket
        acl is_websocket hdr_beg(Host) -i ws
        use_backend websockets if is_websocket

backend servers
        option httpchk GET /--ping
@@CLOUDAPI_INSTANCES@@

backend websockets
        balance source
        option http-server-close
@@CLOUDAPI_LASTINST@@
